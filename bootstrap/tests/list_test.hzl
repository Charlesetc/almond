
# Tests for list operations

Describe "Lists" do

  Test "pop" do
    list = List 1 2 3 4
    a = list.pop
    assert (list.length == 3)
    a == 4
  end

  Test "shift" do
    list = List 1 2 3 4
    a = list.shift
    assert (list.length == 3)
    a == 1
  end

  Test "push" do
    list = List 1 2 3 4
    list.push 2
    assert (list.length == 5)
    assert (list.pop == 2)
  end

  Test "unshift" do
    list = List 1 2 3 4
    list.unshift 2
    assert (list.length == 5)
    assert (list.shift == 2)
  end

  Test "shift twice" do
    list = List 1 2 3 4
    list.shift
    a = list.shift
    assert (list.length == 2)
    a == 2
  end

  Test "pop twice" do
    list = List 1 2 3 4
    list.pop
    a = list.pop
    assert (list.length == 2)
    a == 3
  end

  Test "take-while"  do
    list = List 1 2 3 4 5
    next-list = list.take-while do a
      not (a == 4)
    end
    assert (next-list.length == 3)
    assert (list.length == 2)
    a = next-list.pop
    assert (a == 3)
    a = list.pop
    assert (a == 5)
  end

  Test 'map' do
    list = List 1 2 3 4 5
    list = list.map { x: x + 2 }

    assert (list.pop == 7)
    assert (list.shift == 3)
  end

end
