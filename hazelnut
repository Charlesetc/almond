#!/usr/bin/env ruby

require_relative "./generator.rb"
require_relative "./parser.rb"
require_relative "./token.rb"

def compile
  tokens = ARGV.map do |file|
    t = Tokenizer.new File.read(file)
    t.read
    t.tokens
  end.flatten
  parser = Parser.new tokens
  forest = parser.parse
  generator = Generator.new forest
  generator.generate
end

case a = ARGV.shift
when "run"
  File.write("./build/main.go", compile())
  puts `go run ./build/*.go`
when "build"
  name = ARGV[0]
  ARGV.reject! do |x|
    if x[0..7] == '--build='
      name = x[8..-1]
    end
  end
  File.write("./build/main.go", compile())
  output_file = File.basename(name).split('.')[0]
  puts `go build -o ./build/#{output_file} ./build/*.go `
when "show"
  t = Tokenizer.new ARGF.read
  t.read
  parser = Parser.new t.tokens
  forest = parser.parse
  puts forest.map { |x| x.to_array.inspect }
when "tokens"
  t = Tokenizer.new ARGF.read
  t.read
  puts t.tokens.map {|x| x.symbol.to_s}
else
  ARGV.unshift a
  puts compile()
end
